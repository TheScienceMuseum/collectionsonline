//-----------------------------------------------------------------------------
// a RECORD is a generic term for things that apply (more specifically) to
// Objects, People, Archives, Galleries
// this file covers a few subcomponents, that are all prefixed record-
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
// .record-top
// above the 'fold' important things
//-----------------------------------------------------------------------------

@mixin button-base {
  appearance: none;
  display: inline-flex;
  align-items: center;
  cursor: pointer;
  background-color: black;
  padding: .667em 1em;
}

.record-top {
  background: white;
  @include textstyles;

  &__title {
    font-size: clamp-between(2rem, 3rem);
    letter-spacing: -0.02em;
    margin: 0;
    font-weight: 700;

    .icon {
      font-size: 66.6%;
      position: relative;
      top: 0.125em;
      margin-left: 0.25em;
    }
  }

  &__date {
    font-size: 75%;
    font-weight: 500;
  }

  &__dl {
    font-size: 1.25rem;
    margin: 0;

    dt,
    dd {
      display: inline;
      margin: 0;
    }

    dt {
      @include small-caps;
    }

    dd {
      font-weight: 500;
    }

    a {
      @include text-link;
    }
  }

}

.record-top__back-mph {
  font-size: 1.125rem;
  font-weight: 500;
}

//-----------------------------------------------------------------------------
// .record-imgpanel
// the big image panel thing with carousel, and/or openseadragon
//-----------------------------------------------------------------------------

.record-imgpanel {
  font-weight: 400;
  background: grey(100);
  color: white;
  border-top: 1px white solid;

  &__thumbs {
    position: relative;
    overflow: hidden;
    display: none;
    gap: 1px;
    justify-content: center;

    @include media('>=medium') {
      display: flex;
    }
  }

  &__thumb {
    width: 3rem;
    max-width: auto;
    height: 3rem;
    object-fit: cover;
    opacity: 0.5;
    cursor: pointer;

    &--selected {
      opacity: 1;
      outline: 1px white solid;
      z-index: 1;
      position: relative;
      cursor: default;
    }
  }

  // beneath the images
  &__controlbar {
    position: relative;
  }

  &__caption {
    margin: 1rem 0;
    font-size: 1rem;
    line-height: 1.25;

    @include media('<=small') {
      clear: right;
      font-size: rem(14);
    }
  }
}

.cite {
  //there's not a top level B called cite, just E's
  // inside record-imgpanel__controlbar

  &__button {
    @include button-base;
    @include toolbar-button;

    @include media('<=small') {
      padding: 0.5em 0.75em;
    }

    font-size: rem(18);

    .icon {
      top: rem(2);
      left: rem(-2);
    }

    &--active .icon {
      transform: rotate(270deg);
    }
  }

  &__menu-pos-wrap {
    //wraps __menu to anchor position from top
    position: absolute;
    top: 0;
    right: $grid-gutter;
    width: 100%;
  }

  &__menu {
    background: rgba(black, 0.9);
    position: absolute;
    width: 75%;

    @include media('>=medium') {
      width: 50%;
    }

    @include media('>=large') {
      width: 25%;
    }

    right: 0;
    border: 1px white solid;
    bottom: 0;
    padding: 1rem;
    color: white;
    z-index: 1;
    box-shadow: 0 -8px 16px rgba(black, 0.3);
    display: none;

    &--active {
      display: block;
    }

    button,
    .cite__menubutton {
      @include button-base;
      color: $c-teal;
      border-color: $c-teal;
      border-width: 1px;
      border-style: solid;
      // float: right;
      margin-right: 0;
      margin-left: auto;
      font-size: rem(18);
      gap: 0.5rem;

      text-decoration: none;

      &:hover {
        color: $c-green;
        border-color: $c-green;
      }

      .icon {
        top: rem(2);
        left: rem(-2);
      }
    }

    .download-image {
      margin-left: auto;
    }

    p {
      font-size: 1rem;
      margin: 0;
    }

    a {
      color: $c-teal;
    }


  }

  &__ccbadge {
    vertical-align: baseline;
    margin-right: 0.5rem;
    position: relative;
    top: 0.05em;
  }

  &__method {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    padding-bottom: 1rem;

    & + & {
      border-top: 1px grey(30) solid;
      padding-top: 1rem;
    }
  }
}

.openseadragon {
  background-color: grey(90);
  color: white;
}

.osd {
  &__toolbar {
    float: right;
  }

  &__button {
    @include toolbar-button;
    background-color: black;
  }
}

.record-description {
  font-size: rem(18);
}

// .record-longdesc {
// this could be applied to a <p>
// but may be safer to apply to wrapping <div> for bigger content
// }

.record-details {
  background-color: grey(10);

  &__toggler {
    cursor: pointer;
    padding-left: 1rem;
    @include icon-bullet(arrow_right, $size: 1.125rem, $left: 0.5rem, $top: 0);

    &[aria-expanded='true'] {
      @include icon-bullet(arrow_down, $size: 1.125rem, $left: 0.5rem, $top: 0);
    }
  }

  &__dls {
    //needs to be applied an el that wraps __dl
    display: table;
    width: 100%;
  }

  &__dl {
    display: table-row;
    margin: 0;

    & + & > * {
      border-top: 1px grey(20) solid;
    }

    dt,
    dd {
      margin: 0;
      padding: 0.75rem 0;
      display: table-cell;
    }

    dt {
      @include small-caps;
      color: grey(80);
      line-height: 1rem;
      padding-top: 0.25rem; // to match dd line-height
      // @include hyphenate;
      width: 25%; // the whole point of doing ths table-layout is to do auto-widthing for the terms. but dd widths change using expanding content toggles, causing jumpy layouts
    }

    dd {
      line-height: 1.5rem;
      padding-left: 1em;
    }

    a {
      @include text-link();
    }

    p {
      margin: 0;
    }

    p + p {
      margin-top: 1em;
    }
  }
}

.taxonomy {
  @include ul-icons;
  margin-top: 0;
  margin-bottom: 0;

  li {
    margin-top: 0;
    margin-bottom: 0;

    @for $i from 0 to 5 {
      &:nth-child(#{$i}) {
        margin-left: $i - 1rem;
      }
    }

    &:not(:first-child) {
      @include icon-bullet(taxonomy);
    }
  }
}

//-----------------------------------------------------------------------------
// .record-related
// related records section
// contains a bunch on smaller resultcard's
//-----------------------------------------------------------------------------

.record-related {
  padding: 2rem 0;
  background: black;
  color: white;

  .row {
    @include flexcards-container;
  }

  .column {
    @include flexcards-item;
  }
}

.see-more {
  float: right;
  font-size: 1.5rem;
}

//-----------------------------------------------------------------------------
// .child-record-related
//-----------------------------------------------------------------------------

.mph-records {
  margin-top: $grid-gutter;
  margin-bottom: $grid-gutter;

  &__grid {
    display: grid;
    gap: 2em 1em;
    grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr));
  }

  .resultcard__figure img {
    width: 100%;
  }
}

.group-records {
  display: grid;
  gap: $grid-gutter;
  grid-template-columns: repeat(2, 1fr);

  @include media(">=medium") {
    grid-template-columns: repeat(3, 1fr);
  }

  @include media(">=large") {
    grid-template-columns: repeat(4, 1fr);
  }

}

// sph records

.sph-records {
  margin-top: $grid-gutter;

  .section__h {
    margin-bottom: 0;
  }

  &__grid {
    display: grid;
    gap: 2em $grid-gutter;
    margin-bottom: $grid-gutter;
    grid-template-columns: repeat(auto-fit, minmax(18rem, 1fr));
  }

  [data-has-images='false'] .resultcard__figure {
    display: none;
  }

}

@media only screen and (max-width: 304px) {
  .sph-records {
    &__grid {
      grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
    }
  }
}

.sph-priority-item {
  padding-bottom: $grid-gutter;
  background-image: linear-gradient(to bottom, grey(0), grey(10));

  .o-container {
    display: grid;
    grid-template-columns: 1fr;
    gap: $grid-gutter;
  }

  @include media(">=medium") {
    &[data-has-images=true] .o-container {
      grid-template-columns: 1fr 2fr;
    }

    &__col2 {
      columns: 2;
      column-gap: $grid-gutter;
    }
  }

  &[data-has-images=false] &__col1 {
    display: none;
  }

  &__title {
    margin-top: 0;
  }
}