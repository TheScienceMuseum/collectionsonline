//-----------------------------------------------------------------------------
// .filtercolumn
// ↳ .filterpanel
//   ↳ .filter
//-----------------------------------------------------------------------------

.filterpanel {
  background-color: white;
  border: 1px black solid;
  box-shadow: 0 2px 8px grey(20);
  @include media("<=small") {
    position: absolute;
    top: -1.5rem;
    width: 100%;
    box-shadow: 0 8px 16px rgba(black, 0.3);
  }

  &__button {
    // applies filters, but hidden if js is active
    margin: 0;
    width: 100%;
  }
}

.filter {
  padding: 0.5rem;
  & + & {
    border-top: 1px black solid;
  }
  &--clear {
    border-bottom: 1px black solid;
  }

  &__name {
    display: block;
    position: relative;
    color: black;
    font-size: rem-calc(18);
    @include icon-bullet(arrow_right, 1.5rem, $top: 0.1rem, $left: -0.2rem);
    padding-left: 1.5rem; // need to rewrite that mixin really

    .icon {
      font-size: rem-calc(24);
      position: absolute;
      left: -0.25rem;

      .filter--open & {
        transform: rotate(90deg);
      }
    }
  }

  &__options {
    display: none;
    font-size: rem-calc(12);
    @include clearfix;

    input {
      margin-bottom: 0;
    }

    ul,
    li {
      display: block;
      margin: 0;
      padding: 0;
    }

    .nested-galleries {
      margin-left: 1.5em;
    }

    li {
      padding-top: rem-calc(6);
      position: relative;
    }

    label {
      padding-left: 1.5rem;
      margin: 0;
      line-height: rem-calc(16);
      cursor: pointer;
      // &:hover { color: mix($c-teal, $c-blue); }
    }
    .filter__box {
      //checkbox within label
      position: absolute; // relative to li
      top: rem-calc(8);
      left: rem-calc(4);
    }
  }

  &__count {
    color: grey(50);
    @include small-caps;
    padding-left: 0.5em;
  }

  &--active,
  &--open {
    .filter__options {
      display: block;
    }
  }

  &--open {
    .filter__name {
      @include icon-bullet(arrow_down, 1.5rem, $left: -0.2rem);
      padding-left: 1.5rem;
      padding-bottom: 0.5rem;
      margin-bottom: 0.25rem;
    }
    .filter__name:after {
      content: "";
      position: absolute;
      left: 0;
      right: 0;
      bottom: 0;
      border-bottom: 1px grey(20) solid;
    }
  }

  &--active {
    //border-left: 1px mix($c-teal, $c-blue) solid;
    background-color: grey(80);
    color: white;

    .filter__name {
      color: white;
      font-weight: 500;
      @include icon-bullet(cancel, 1.5rem, $top: -0.5rem, $left: -0.2rem);
    }
    .filter__name:after {
      border-color: grey(70);
    }

    label {
      color: white;
      font-weight: 400;
    }
  }

  &--uncollapsible &__name {
    @include icon-bullet(cancel, 1.5rem, $top: 0.1rem, $left: -0.2rem);
  }

  &:hover:not(&--active) {
    @include control-hover;
  }

  .filter__other {
    display: block;
    color: grey(40);
    font-size: rem-calc(14);
    padding-left: 1.5rem;
    padding-top: rem-calc(4);
    @include icon-bullet(arrow_right, $size: 1.25rem, $top: 0.1rem);
    &:before {
      opacity: 0.5;
    }

    &--open {
      @include icon-bullet(arrow_down, $size: 1.25rem, $top: 0.4rem);
      padding-left: 1.5rem;
    }
  }

  &__daterange {
    label {
      float: left;
      width: 50%;
      margin-right: -1px;
      padding: 0.125rem 0;
    }
  }
}

//-----------------------------------------------------------------------------
// .filterbadge - attached beneath searchbox, indicate (some, important) active filters
// see
// templates/partials/global/searchbox.html
// Expecting a data-filter="Category|Museum|Archive"
//-----------------------------------------------------------------------------

@mixin filterbadge-base {
  position: relative;
  display: inline-block;
  white-space: nowrap;
  max-width: 100%;
  @include media(">=medium") {
    max-width: 75%;
  }
  vertical-align: middle;
  line-height: 1rem;
  font-weight: 500;
  font-size: 0;
  & * {
    font-size: rem-calc(14);
  }
}

$filtertypes: (
  Category: $c-teal,
  Museum: $c-purple,
  Archive: $c-green
);
@each $type, $c in $filtertypes {
  .filterbadge[data-filter="#{$type}"] {
    $c: mix($c, $c-blue);
    background: $c;
  }
  [data-filter="#{$type}"] .filterbadge__x {
    background: $c;
    &:hover {
      background: darken($c, 10%);
    }
  }
}

.filterbadge {
  @include filterbadge-base;
  overflow: hidden;
  color: white;
  background: grey(50); // but should be overridden by data-filter type
  a:hover {
    color: white;
  }
  border-radius: rem-calc(6);
  margin: rem-calc(4 4 4 0);
  &__label,
  &__key {
    display: inline-block;
    white-space: nowrap;
    max-width: 80%;
    overflow: hidden;
    vertical-align: top;
    text-overflow: ellipsis;
    padding: rem-calc(4 8);
  }
  &__label {
    padding-right: rem-calc(30);
    padding-left: rem-calc(4);
  }
  &__key {
    padding-right: rem-calc(12); // 4 + width of pseudo el
    position: relative;
    &:after {
      content: "";
      position: absolute;
      right: 0;
      top: 0;
      bottom: 0;
      width: rem-calc(8);
      background-image: svg-uri(
        '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8 28"><path stroke="#FFFFFF" fill="none" d="M1,0 7,15 1,28" vector-effect="non-scaling-stroke" ></path></svg>'
      );
      background-repeat: no-repeat;
      background-size: 100% 100%;
      background-position: left center;
    }
  }

  &__x {
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    display: block;
    float: right;
    padding: rem-calc(4 8 4 6);
    color: white;
    border-left: 1px white solid;
    &:hover {
      color: white;
    }
  }

  &--prefix {
    @include filterbadge-base;
    color: grey(60);
    background-color: grey(20);
    @include small-caps;
    padding: rem-calc(4 8);
    border-radius: rem-calc(6 0 0 6);
    margin: rem-calc(4 0);

    &:after {
      content: "";
      position: absolute;
      right: rem-calc(-7);
      overflow: visible;
      top: 0;
      bottom: 0;
      width: rem-calc(8);
      background-image: svg-uri(
        '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8 28"><path fill="#cccccc" d="M0,0 1,0 7,15 1,28 0,28"></path><path fill="none" stroke="#FFFFFF" stroke-width="2px" d="M1,0 7,15 1,28" vector-effect="non-scaling-stroke" ></path></svg>'
      );
      background-repeat: no-repeat;
      background-size: 100% 100%;
      background-position: left center;
      z-index: 1;
    }
  }
  &--prefix + & {
    // the first badge after prefix
    border-radius: rem-calc(0 6 6 0);
    padding-left: rem-calc(8);
    max-width: 80%;
  }
}
