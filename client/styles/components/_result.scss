//-----------------------------------------------------------------------------
//
// shared inheritance for .resultlist and .resultcard pattern
//-----------------------------------------------------------------------------

@mixin resultclass {
  position: relative;
  min-height: 100%;
  width: 100%;
  line-height: 1.2;

  &__figure {
    margin: 0;
    background-color: grey(80);
    position: relative;
    overflow: hidden;

    img {
      position: absolute;
      width: auto;
      height: auto;
      min-height: 100%;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      margin: auto;
      object-fit: cover;
      object-position: center;
    }

    figcaption {
      overflow: hidden;
      position: absolute;
      top: 0.25rem;
      left: 0.25rem;
      right: -0.75rem;
      bottom: -0.5rem;
      margin: auto;
      color: rgba(white, 0.25);
      font-size: rem-calc(24);
      @include breakpoint(medium) {
        font-size: rem-calc(32);
      }
      line-height: 1;
      letter-spacing: rem-calc(-1);
      font-weight: 300;
    }
  }

  &__title {
    font-weight: 700;
    font-size: rem-calc(16);
    line-height: 1.2;
    text-transform: none;
    margin: 0;
    @include breakpoint(medium) {
      font-size: rem-calc(18);
    }
  }

  &__info {
    position: relative;
    padding-top: 0.5rem;
    @include breakpoint(medium) {
      padding-top: 1rem;
    }
  }

  &__description,
  p,
  ul,
  li {
    font-weight: 300;
    font-size: rem-calc(16);
    margin: 0;
  }

  p {
    margin: 0;
    line-height: 1.2;
  }

  ul {
    @include ul-icons;
    svg {
      vertical-align: middle;
      margin-bottom: rem-calc(2);
    }
  }

  @each $type, $props in $recordtypes {
    &--#{$type} &__figure {
      background-color: map-get($props, bg);
      @include sm-gradient(map-get($props, grad));
    }

    &--#{$type} .icon {
      color: map-get($props, bg);
    }
  }

  //used as related results, slight smaller
  &--related {
    //background-color: white;
  }
}

@mixin resulthover {
  transition: background-color $transition-default,
    box-shadow $transition-default, transform $transition-default;

  &:before {
    content: '';
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    transition: background-color $transition-default,
      transform $transition-default;
    position: absolute;
    z-index: 0;
  }

  &:hover {
    &:before {
      transform: scale3d(1.06, 1.06, 1);
    }

    img,
    figcaption {
      transform: scale3d(1.06, 1.06, 1);
    }
  }

  &__figure {
    img {
      transition: transform $transition-default;
    }

    figcaption {
      transition: transform $transition-default;
    }
  }
}

//-----------------------------------------------------------------------------
// .resultlist
// The list view display of a result
//-----------------------------------------------------------------------------

.resultlist {
  @include resultclass;
  border: 1px solid black;
  margin-bottom: -1px;
  color: black;

  &:hover {
    background-color: rgba(black, 0.05);
  }

  &__info {
    padding: 0.5rem;
    @include breakpoint(medium) {
      padding: 1rem;
    }
  }

  &__figure {
    width: 4rem; //aspect 4:3
    height: 3rem; //aspect 4:3
    float: right;
    margin: 1rem;
  }

  &__description {
    line-height: 1.2;
  }

  .icon {
    position: relative;
    top: 0.15rem;
  }
}

//-----------------------------------------------------------------------------
// .resultcard
// The main 'card' display of a result
//-----------------------------------------------------------------------------

.resultcard {
  @include resultclass;
  color: black;
  a & {
    @include resulthover;
  }

  &:hover {
    &:before {
      background-color: rgba(black, 0.05);
    }
  }

  &__description {
    color: grey(80);
  }

  &__figure {
    width: 100%; //aspect 4:3
    padding-top: 75%; //aspect 4:3
  }

  &__title {
    .icon {
      float: right;
      margin-left: 0.5rem;
      margin-bottom: 0.5rem;
      clear: right;
      font-size: rem-calc(16);
      @include breakpoint(medium) {
        font-size: rem-calc(24);
      }
    }
  }

  @mixin reversed {
    color: white;

    &:hover {
      &:before {
        background-color: grey(80);
      }
    }

    .resultcard__info,
    .resultcard__title,
    .resultcard__description {
      color: white;
    }
  }

  // used as related results, slight smaller
  &--related,
  &--seemore {
    @include reversed;

    .resultcard__info {
      padding: 0.5rem 0;
    }

    .resultcard__title {
      font-weight: 500;
      font-size: 1rem;
    }
  }

  &--dark {
    @include reversed;
  }

  // the final related result
  &--seemore {
    // text-align: center;
    //background-color: white;

    &.see-more-objects .resultcard__figure {
      background-color: map-deep-get($recordtypes, objects, bg);
      @include sm-gradient(map-deep-get($recordtypes, objects, grad));
      border-color: map-deep-get($recordtypes, objects, bg);
    }

    &.see-more-documents .resultcard__figure {
      background-color: map-deep-get($recordtypes, documents, bg);
      @include sm-gradient(map-deep-get($recordtypes, documents, grad));
      border-color: map-deep-get($recordtypes, documents, bg);
    }

    svg {
      // .search-icon
      position: absolute;
      display: block;
      top: 50%;
      left: 50%;
      transform: translateX(-50%) translateY(-50%);
      fill: white;
    }
  }

  //used on home page
  // &--collection { }
}
