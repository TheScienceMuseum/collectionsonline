@use "sass:math";

//-----------------------------------------------------------------------------
// .resultcard
// The main 'card' display of a result
//-----------------------------------------------------------------------------

.resultcard {
  position: relative;
  width: 100%;
  line-height: 1.2;
  color: black;

  a &,
  a:has(&) {
    text-decoration: none;
  }

  a:has(&) {
    display: flex; // to stretch card to container height
  }

  &__figure {
    @include card-image;
  }

  &__type {
    position: absolute;
    top: 0;
    left: 0;
    background-color: rgba(black, 0.5);
    color: white;
    width: 2rem;
    height: 2rem;
    display: flex;
    align-items: center;
    justify-content: center;

    .icon {
      font-size: 1.5rem;
      color: inherit;
    }
  }


  // wraper for all text content els
  &__info {
    position: relative;
    padding-top: 0.5rem;

    @include media(">=medium") {
      padding-top: 1rem;
    }

    //browsers hyphenate a bit too readily, so only used on widths where we really haven't got room
    @include media("<=small") {
      overflow: hidden;
      @include hyphenate;
    }
  }

  &__title {
    font-weight: 700;
    font-size: clamp-between(1rem, 1.125rem);
    line-height: 1.2;
    text-transform: none;
    margin: 0;

    .icon {
      float: right;
      margin-left: 0.5rem;
      margin-bottom: 0.5rem;
      clear: right;
      font-size: rem(16);

      @include media(">=medium") {
        font-size: rem(24);
      }
    }
  }

  &__description,
  p,
  ul,
  li {
    font-size: 1rem;
    margin: 0;
  }

  p {
    margin: 0;
    line-height: 1.2;
  }

  &__linklist {
    @include ul-icons;
    $icnsize: 1rem;

    li {
      position: relative;
      padding-left: 1.25rem;
      line-height: 1.25;
      margin-top: 0.5rem;

      &:before {
        content: "";
        display: block;
        position: absolute;
        left: 0;
        top: math.div($icnsize, 8);
        margin: auto; // top, bottom, height, auto = vertical align!
        height: $icnsize;
        width: $icnsize;
        background-image: url(/assets/icons/search.svg);
        background-size: $icnsize $icnsize;
      }
    }

    a {
      color: grey(80);
      text-decoration: none;

      &:hover {
        color: black;
        text-decoration: underline;
      }
    }
  }

  @each $type, $props in $recordtypes {
    &--#{$type} &__figure {
      background-color: map-get($props, bg);
      @include sm-gradient(map-get($props, grad));
    }

    // &--#{$type} .icon {
    //   color: map-get($props, bg);
    // }
  }


  a & {
    transition: background-color $transition-default,
      box-shadow $transition-default, transform $transition-default;

    &:before {
      content: "";
      top: 0;
      bottom: 0;
      right: 0;
      left: 0;
      transition: background-color $transition-default,
        transform $transition-default;
      position: absolute;
      z-index: 0;
    }

    &:hover {
      &:before {
        transform: scale3d(1.06, 1.06, 1);
      }

      img,
      svg.collage {
        transform: scale3d(1.06, 1.06, 1);
      }
    }

    &__figure {

      img,
      svg.collage {
        transition: transform $transition-default;
      }
    }
  }

  &:hover {
    &:before {
      background-color: rgba(black, 0.05);
    }
  }

  &__description {
    color: grey(80);
  }

  @mixin reversed {
    color: white;

    &:hover {
      &:before {
        background-color: grey(80);
      }
    }

    .resultcard__info,
    .resultcard__title,
    .resultcard__description {
      color: white;
    }
  }

  // used as related results, slight smaller
  &--related,
  &--seemore:not(.mph-records__resultcard) {
    @include reversed;

    .resultcard__info {
      padding: 0.5rem 0;
    }

    .resultcard__title {
      font-weight: 500;
      font-size: 1rem;
    }
  }

  &--dark {
    @include reversed;
  }

  // the final related result
  &--seemore {
    // text-align: center;
    //background-color: white;

    &.see-more-objects .resultcard__figure {
      background-color: map-deep-get($recordtypes, objects, bg);
      @include sm-gradient(map-deep-get($recordtypes, objects, grad));
      border-color: map-deep-get($recordtypes, objects, bg);
    }

    &.see-more-documents .resultcard__figure {
      background-color: map-deep-get($recordtypes, documents, bg);
      @include sm-gradient(map-deep-get($recordtypes, documents, grad));
      border-color: map-deep-get($recordtypes, documents, bg);
    }

    svg {
      // .search-icon
      position: absolute;
      display: block;
      top: 50%;
      left: 50%;
      transform: translateX(-50%) translateY(-50%);
      fill: white;
    }
  }

  //used on home page
  // &--collection { }
}