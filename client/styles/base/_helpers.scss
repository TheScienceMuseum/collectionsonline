//-----------------------------------------------------------------------------
// HELPERS
// mixins, functions and other settings
//-----------------------------------------------------------------------------

$transition-default: 0.2s ease-in-out;

// http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/
@mixin vertical-align {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

@mixin text-link($color: $c-blue, $hover: $c-teal) {
  color: $color;
  border-bottom: 1px solid transparent;
  transition: color $transition-default, border-color $transition-default;

  &:hover {
    color: $hover;
    border-color: $hover;
  }
}

@mixin icon-before($icon, $size: 1rem) {
  position: relative;

  &:before {
    content: " ";
    display: block;
    height: $size;
    width: $size;
    background-image: url(/assets/icons/#{$icon}.svg);
    background-size: $size $size;
  }
}

@mixin ul-icons {
  margin: 0.5rem 0;
  padding: 0;

  li {
    display: block;
    margin: 0.5rem 0;

    &:last-child {
      margin-bottom: 0;
    }
  }
}

@mixin flexcards-container {
  display: flex;
  flex-wrap: wrap;

  &::before,
  &::after {
    // clear the row clearfix for Safari, if in flexmode
    flex-basis: 0;
    order: 1;
  }
}

@mixin flexcards-item {
  margin-bottom: 2rem;
  &,
  & > a {
    display: flex;
  }
  a {
    width: 100%;
  }
}

// wrap long text strings
@mixin hyphenate {
  overflow-wrap: break-word;
  word-wrap: break-word;
  word-break: break-all;
  word-break: break-word;
  hyphens: auto;
}

//-----------------------------------------------------------------------------
// icon-bullet
// replacing a bulleted list â€¢ with an svg icon
// requires: $icon
// params: $top, $left, $bottom , to offset if aligning
//  $align: top | center | bottom
//-----------------------------------------------------------------------------

@mixin icon-bullet(
  $icon,
  $size: 0.75em,
  $left: 0,
  $top: null,
  $bottom: null,
  $align: center
) {
  position: relative;
  padding-left: $size * 4/3 + $left;
  &:before {
    content: " ";
    display: block;
    position: absolute;
    margin: auto; // top, bottom, height, auto = vertical align!
    left: 0 + $left;
    @if ($top) {
      top: $top;
    } @else {
      top: -$size/5;
    }
    @if ($align == "top") {
      margin-top: 0;
    } @else if ($align == "bottom") {
      @if ($bottom) {
        bottom: $bottom;
      } @else {
        bottom: 0;
      }
      margin-bottom: 0;
    } @else {
      @if ($bottom) {
        bottom: $bottom;
      } @else {
        bottom: 0;
      }
    }
    height: $size;
    width: $size;
    background-image: url(/assets/icons/#{$icon}.svg);
    background-size: $size $size;
  }
}

//certain icons used to represent recordtype should always be a mapped color.
@each $type, $props in $recordtypes {
  .icon-#{$type} {
    color: map-get($props, bg);
  }
}

@mixin small-caps {
  font-size: 75%;
  text-transform: uppercase;
  font-weight: 500;
  letter-spacing: 0.015em;
}

@mixin control-base {
  border: 1px black solid;
  background: white;
  color: black;
}

@mixin control-hover {
  background-color: grey(10);
}

// used in imgpanel controls currently
@mixin toolbar-button {
  float: right;
  // display: flex;
  // justify-content: center;
  // align-items: center;
  cursor: pointer;
  color: white;
  border: 1px white solid;
  border-color: inherit;
  margin: rem-calc(-1 0 8 -1);
  height: 3rem;
  min-width: 3rem;
  @include media("<=small") {
    height: 2.5rem;
    min-width: 2.5rem;
  }
  &:hover {
    background-color: black;
  }
}

// common properties across record-imgpanel components
@mixin imgpanel-h {
  $h: 36rem; // this might change after load?
  height: $h;
  transition: height $transition-default;
  @include media("<=small") {
    height: 25rem;
  } //  = 12px
}
